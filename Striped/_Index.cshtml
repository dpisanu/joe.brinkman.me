@foreach(IDocument post in Model.DocumentList(Keys.PageDocuments))
{
    <!-- Post -->
        <article class="box post post-excerpt">
            <header>
                <h2><a href="@Context.GetLink(post)">@post.WithoutSettings.String(BlogKeys.Title)</a></h2>
            </header>
            <div class="info">
                <!--
                    Note: The date should be formatted exactly as it's shown below. In particular, the
                    "least significant" characters of the month should be encapsulated in a <span>
                    element to denote what gets dropped in 1200px mode (eg. the "uary" in "January").
                    Oh, and if you don't need a date for a particular page or post you can simply delete
                    the entire "date" element.

                -->
                <span class="date" title="@(post.Get<DateTime>(BlogKeys.Published).ToLongDateString(Context))"><span class="month">@(System.Globalization.DateTimeFormatInfo.InvariantInfo.GetAbbreviatedMonthName(post.Get<DateTime>(BlogKeys.Published).Month))</span> <span class="day">@(post.Get<DateTime>(BlogKeys.Published).Day)</span></span>
                <!--
                    Note: You can change the number of list items in "stats" to whatever you want.
                    TODO: Come back and revisit how to calculate stats.
                -->
                <ul class="stats" style="display:none">
                    <li><a href="#" class="icon fa-comment">16</a></li>
                    <li><a href="#" class="icon fa-heart">32</a></li>
                    <li><a href="#" class="icon fa-twitter">64</a></li>
                    <li><a href="#" class="icon fa-facebook">128</a></li>
                </ul>
            </div>
        </article>
        <a href="#" class="image featured"><img src="images/pic01.jpg" alt="" /></a>
                            @if(Context.Bool(BlogKeys.IndexFullPosts))
        {
            @Html.Raw(post.Content)
        }
        else
        {
            @Html.Raw(post.String(BlogKeys.Excerpt))

            <div class="postlink"><a href="@Context.GetLink(post)">More...</a></div>
        }              
}

@Html.Partial("_Pagination") 

